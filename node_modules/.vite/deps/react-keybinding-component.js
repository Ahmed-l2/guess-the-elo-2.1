import {
  require_react
} from "./chunk-4HAMFFQC.js";
import {
  __toESM
} from "./chunk-EQCVQC35.js";

// node_modules/react-keybinding-component/dist/keybinding.js
var import_react = __toESM(require_react());
var TARGETS_BLACKLIST = ["textarea", "input", "select"];
function getTarget(target) {
  if (typeof target === "string") {
    const element = document.querySelector(target);
    if (!element) {
      throw new Error(
        `Selector "${target}" returned null (on keybinding mount)`
      );
    }
    return element;
  }
  return target;
}
function Keybinding(props) {
  const {
    onKey,
    type = "keydown",
    target = document,
    // Probably will make server-side rendering crash
    preventInputConflict = false,
    preventContentEditableConflict = false,
    preventDefault = false,
    stopPropagation = false
  } = props;
  const onKeyEvent = (0, import_react.useCallback)(
    (e) => {
      if (preventDefault)
        e.preventDefault();
      if (stopPropagation)
        e.stopPropagation();
      const target2 = e.target;
      if (target2) {
        let canDispatch = true;
        if (preventInputConflict && TARGETS_BLACKLIST.indexOf(target2.tagName.toLowerCase()) > -1) {
          canDispatch = false;
        }
        if (preventContentEditableConflict && checkIfContentEditable(target2)) {
          canDispatch = false;
        }
        if (canDispatch)
          onKey(e);
      }
    },
    [
      preventDefault,
      stopPropagation,
      preventInputConflict,
      preventContentEditableConflict,
      onKey
    ]
  );
  (0, import_react.useEffect)(() => {
    const actualTarget = getTarget(target);
    actualTarget.addEventListener(type, onKeyEvent);
    return () => {
      actualTarget.removeEventListener(type, onKeyEvent);
    };
  }, [target, type, onKeyEvent]);
  return null;
}
function checkIfContentEditable(node) {
  if (node === null) {
    return false;
  }
  if (node.getAttribute("contenteditable") === "true") {
    return true;
  }
  return checkIfContentEditable(node.parentElement);
}
export {
  Keybinding as default
};
//# sourceMappingURL=react-keybinding-component.js.map
